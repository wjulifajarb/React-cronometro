{"version":3,"sources":["components/Pantalla.jsx","components/Botones.jsx","components/Record.jsx","components/Cronometro.jsx","index.js"],"names":["Pantalla","props","className","id","tiempo","h","m","s","ms","Botones","onClick","Iniciar","Detener","Grabar","Reiniciar","Record","grabar","map","Cronometro","useState","setTiempo","interv","setInterv","setGrabar","actualizarMs","actualizarS","actualizarM","actualizarH","Correr","setInterval","clearInterval","length","ReactDOM","render","document","getElementById"],"mappings":"+MAeeA,MAbf,SAAmBC,GACf,OACA,sBAAKC,UAAY,iBAAjB,UACI,uBAAMC,GAAK,SAAX,cAAwBF,EAAMG,OAAOC,EAAI,IAAMJ,EAAMG,OAAOC,EAAI,MAAQ,IAAMJ,EAAMG,OAAOC,EAAI,MAA/F,OACA,uBAAMF,GAAK,SAAX,cAAuBF,EAAMG,OAAOE,EAAI,IAAML,EAAMG,OAAOE,EAAI,MAAQ,IAAML,EAAMG,OAAOE,EAAI,MAA9F,OACA,uBAAMH,GAAK,SAAX,cAAuBF,EAAMG,OAAOG,EAAI,IAAMN,EAAMG,OAAOG,EAAI,MAAQ,IAAMN,EAAMG,OAAOG,EAAI,MAA9F,OACA,uBAAMJ,GAAK,SAAX,cAAuBF,EAAMG,OAAOI,GAAI,IAAMP,EAAMG,OAAOI,GAAM,IAAMP,EAAMG,OAAOI,GAApF,WCKOC,MAXf,SAAkBR,GAClB,OACI,sBAAKC,UAAY,iBAAjB,UACI,wBAAQA,UAAY,YAAYQ,QAAUT,EAAMU,QAAhD,qBACA,wBAAQT,UAAY,WAAWQ,QAAUT,EAAMW,QAA/C,qBACA,wBAAQV,UAAY,aAAaQ,QAAUT,EAAMY,OAAjD,oBACA,wBAAQX,UAAY,WAAWQ,QAAUT,EAAMa,UAA/C,2BCMOC,EAZA,SAACd,GACZ,OACI,8BACI,oBAAIC,UAAY,YAAhB,SACAD,EAAMe,OAAOC,KAAI,SAAAb,GAAM,OACpB,6BAAqBA,EAAOA,QAAnBA,EAAOD,YC+EhBe,MA9Ef,WAAsB,MAKSC,mBAAS,CAACX,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,IALrC,mBAKXD,EALW,KAKHgB,EALG,OAOSD,qBAPT,mBAOXE,EAPW,KAOHC,EAPG,OASQH,mBAAS,IATjB,mBASXH,EATW,KASJO,EATI,KAYdC,EAAepB,EAAOI,GAAIiB,EAAcrB,EAAOG,EAAGmB,EAActB,EAAOE,EAAGqB,EAAcvB,EAAOC,EAQ7FuB,EAAQ,WAgBV,OAfmB,IAAfF,IACAC,IACAD,EAAc,GAEC,IAAfD,IACAC,IACAD,EAAc,GAEE,KAAhBD,IACAC,IACAD,EAAe,GAGnBA,IAEOJ,EAAU,CAACZ,GAAGgB,EAAcjB,EAAEkB,EAAanB,EAAEoB,EAAarB,EAAEsB,KA8BvE,OACG,gCACI,cAAC,EAAD,CAAUvB,OAAWA,IACrB,cAAC,EAAD,CAAUO,QAvDF,WACXiB,IACAN,EAAWO,YAAaD,EAAO,MAqDEhB,QA7BtB,WAEXkB,cAAcT,IA2BuCP,UAxBxC,WAEbgB,cAAeT,GACfD,EAAU,CAACZ,GAAG,EAAGD,EAAE,EAAGD,EAAE,EAAGD,EAAE,KAqBiDQ,OAnBpE,WAEZU,EAAU,GAAD,mBAEJP,GAFI,CAGP,CACAb,GAAGa,EAAOe,OACV3B,OAAO,GAAD,OAAIuB,EAAJ,cAAqBD,EAArB,cAAsCD,EAAtC,cAAuDD,UAa1D,cAAC,EAAD,CAAUR,OAAWA,QCxEhCgB,IAASC,OAEL,cAAC,EAAD,IAIFC,SAASC,eAAe,W","file":"static/js/main.1e8b02c3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Pantalla (props){\n    return(\n    <div className = \"grid-container\">     \n        <span id = 'screen' > {(props.tiempo.h > 9.9)? props.tiempo.h + \" : \" : \"0\" + props.tiempo.h + \" : \"} </span>\n        <span id = 'screen'> {(props.tiempo.m > 9.9)? props.tiempo.m + \" : \" : \"0\" + props.tiempo.m + \" : \"} </span>\n        <span id = 'screen'> {(props.tiempo.s > 9.9)? props.tiempo.s + \" : \" : \"0\" + props.tiempo.s + \" : \"} </span>\n        <span id = 'screen'> {(props.tiempo.ms> 9.9)? props.tiempo.ms  : \"0\" + props.tiempo.ms  } </span> \n        \n       \n    </div>\n    )\n}\n\nexport default Pantalla\n\n\n","import React from \"react\"\n\nfunction Botones (props) {\nreturn (\n    <div className = \"grid-container\">\n        <button className = \"btn-start\" onClick ={props.Iniciar}>Iniciar</button>\n        <button className = \"btn-stop\" onClick ={props.Detener}>Detener</button>\n        <button className = \"btn-record\" onClick ={props.Grabar}>Grabar</button>\n        <button className = \"btn-rest\" onClick ={props.Reiniciar}>Reiniciar</button>\n    </div>\n)\n}\n\nexport default Botones;","import React from 'react'\n\nconst Record = (props) => {\n    return (\n        <div>\n            <ul className = \"grabacion\">\n           {props.grabar.map(tiempo=>(\n               <li key={tiempo.id}>{tiempo.tiempo}</li>\n           ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Record;","import React, { useState } from \"react\";\nimport Pantalla from \"./Pantalla\"; \nimport Botones from \"./Botones\";\nimport Record from './Record';\n//import Menu from \"./Menu\";\n\n\n\nfunction Cronometro() {\n    \n    // hooks useState\n\n    // useState para manejar variables para controlar el tiempo \n    const [tiempo, setTiempo]= useState({ms:0, s:0, m:0, h:0});\n    // useState para manejar el varlor de setInterval\n    const [interv, setInterv]= useState ();\n\n    const [grabar,setGrabar]= useState([]);\n\n    // Variables á¹•ara cambiar el valor de ms, s, m, h\n    let actualizarMs = tiempo.ms, actualizarS = tiempo.s, actualizarM = tiempo.m, actualizarH = tiempo.h;\n\n    const Iniciar =() =>{\n        Correr ();\n        setInterv (setInterval (Correr,10));\n    }\n\n\n    const Correr =() =>{\n        if (actualizarM == 60) {\n            actualizarH ++;\n            actualizarM = 0;\n        }\n        if (actualizarS == 60) {\n            actualizarM ++;\n            actualizarS = 0;\n        }\n        if (actualizarMs == 100) {\n            actualizarS ++;\n            actualizarMs = 0;\n        }\n        \n        actualizarMs ++;\n        \n        return setTiempo({ms:actualizarMs, s:actualizarS, m:actualizarM, h:actualizarH})\n        \n    }\n\n    const Detener =() => {\n\n        clearInterval(interv);\n    }\n\n    const Reiniciar =() => {\n\n        clearInterval (interv);\n        setTiempo({ms:0, s:0, m:0, h:0})\n    }\n    const Grabar =() => {\n        \n      setGrabar([\n          \n        ...grabar,\n        {\n        id:grabar.length,  \n        tiempo:`${actualizarH} : ${actualizarM} : ${actualizarS} : ${actualizarMs}`\n    \n        }])\n        \n\n    }\n\n\n\n    return(\n       <div>\n           <Pantalla tiempo  = {tiempo}  />\n           <Botones  Iniciar = {Iniciar} Detener = {Detener} Reiniciar = {Reiniciar}  Grabar = {Grabar} />\n           <Record   grabar  = {grabar} />\n        </div>\n    )\n\n}\n\n\n\nexport default Cronometro;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/app.scss';\nimport Cronometro from './components/Cronometro';\n\n\nReactDOM.render(\n  \n    <Cronometro/>,\n    \n    \n  \n  document.getElementById('root')\n);"],"sourceRoot":""}